import styles from '../styles/Home.module.css';
import { Field, Form, Formik } from 'formik';
import { useContractWrite, usePrepareContractWrite } from 'wagmi'
import { ConnectButton } from '@rainbow-me/rainbowkit';
import datajs from '../data.json';
import { Heading,
  Text,
  Button,
  ButtonGroup,
  Box,
  Container,
  Flex,
  Spacer,
  List,
  ListItem,
  ListIcon,
  OrderedList,
  Divider,
  Center,
  Input,
  FormControl,
  FormLabel,
  FormErrorMessage,
  FormHelperText,
  AbsoluteCenter,
  UnorderedList} from '@chakra-ui/react';

function validateName(value) {
  let error
  if (!value) {
    error = 'Name is required'
  } else if (value.toLowerCase() !== 'chris') {
    error = "Username already taken"
  }
  return error
}

function FormikExample() {
  return (
    <Formik
      initialValues={{name: ''}}
      onSubmit={(values, actions) => {
        setTimeout(() => {
          alert(JSON.stringify(values, null, 2))
          actions.setSubmitting(false)
        }, 1000)
      }}
    >
      {(props) => (
        <Form>
          <Field name='name' validate={validateName}>
            {({ field, form }) => (
              <FormControl isInvalid={form.errors.name && form.touched.name}>
                <FormLabel>Create Username</FormLabel>
                <Input {...field} placeholder='Username' />
                <FormErrorMessage>{form.errors.name}</FormErrorMessage>
              </FormControl>
            )}
          </Field>
          <Button
            mt={4}
            colorScheme='teal'
            isLoading={props.isSubmitting}
            type='submit'
          >
            Submit
          </Button>
        </Form>
      )}
    </Formik>
  )
}

const chat = () => {
    const { config } = usePrepareContractWrite({
        address: '0x22d819FA52ffDB2465adcfC9B638f925c869f17f',
        abi: datajs.abi,
        functionName: 'createAccount',
        args: [],
    })
    const { data, isLoading, isSuccess, write } = useContractWrite(config)

  return (
    <div>
      <Flex>
        <Box m='5'>
          <Heading size={'lg'}>Skill<span className={styles.gradient}>-Share</span></Heading>
        </Box>
        <Spacer />
        <Box m='5'>
          <ConnectButton
              accountStatus={{
                smallScreen: 'avatar',
                largeScreen: 'full',
              }}
              showBalance={{
                smallScreen: false,
                largeScreen: true,
              }}
            />
        </Box>
      </Flex>
      <div>
        <button disabled={!write} onClick={() => write?.()}>
            Feed
        </button>
        {isLoading && <div>Check Wallet</div>}
        {isSuccess && <div>Transaction: {JSON.stringify(data)}</div>}
        </div>
      <Container centerContent size="lg" fontSize='2xl' variant={"bold"} mt={10}>
        <Heading size="2xl" m={5}>
          Skill<span className={styles.gradient}>-Share</span> Chat
        </Heading>
        {/* Add your content here */}
        <FormikExample />
      </Container>
    </div>
  );
};

export default chat;
